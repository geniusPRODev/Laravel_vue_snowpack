const n=typeof window!="undefined";function c(...r){console.log("[ESM-HMR]",...r)}function d(){!n||location.reload(!0)}function m(){!n||document.querySelectorAll("hmr-error-overlay").forEach(r=>r.remove())}function f(r){if(!n)return;const e=customElements.get("hmr-error-overlay");if(e){const t=new e(r);m(),document.body.appendChild(t)}}let u=[];function h(r){i.send(JSON.stringify(r))}function g(r){i.readyState!==i.OPEN?u.push(r):h(r)}let p=n&&window.HMR_WEBSOCKET_URL;if(!p){const r=n&&window.HMR_WEBSOCKET_PORT&&window.HMR_WEBSOCKET_PORT!==80?`${location.hostname}:${window.HMR_WEBSOCKET_PORT}`:location.host;p=(location.protocol==="http:"?"ws://":"wss://")+r+"/"}const i=new WebSocket(p,"esm-hmr");i.addEventListener("open",()=>{u.forEach(h),u=[]});const l={};class S{constructor(e){this.data={},this.isLocked=!1,this.isDeclined=!1,this.isAccepted=!1,this.acceptCallbacks=[],this.disposeCallbacks=[],this.id=e}lock(){this.isLocked=!0}dispose(e){this.disposeCallbacks.push(e)}invalidate(){d()}decline(){this.isDeclined=!0}accept(e,t=!0){if(this.isLocked)return;this.isAccepted||(g({id:this.id,type:"hotAccept"}),this.isAccepted=!0),Array.isArray(e)||(t=e||t,e=[]),t===!0&&(t=()=>{});const o=e.map(s=>{const a=s.split(".").pop();return a?a!=="js"&&(s+=".proxy.js"):s+=".js",new URL(s,`${window.location.origin}${this.id}`).pathname});this.acceptCallbacks.push({deps:o,callback:t})}}export function createHotContext(r){const e=new URL(r).pathname,t=l[e];if(t)return t.lock(),R(e),t;const o=new S(e);return l[e]=o,o}async function M({url:r}){const e=Date.now(),t=document.head.querySelector(`link[data-hmr="${r}"]`)||document.head.querySelector(`link[href="${r}"]`);if(!t)return!0;const o=t.cloneNode(!1);return o.dataset.hmr=r,o.type="text/css",o.rel="stylesheet",o.href=r+"?mtime="+e,o.addEventListener("load",()=>setTimeout(()=>document.head.removeChild(t),30),!1),t.parentNode.insertBefore(o,t),!0}async function C({url:r,bubbled:e}){const t=l[r];if(!t||t.isDeclined)return!1;const o=t.acceptCallbacks,s=Date.now();for(const{deps:a,callback:E}of o){const[w,...k]=await Promise.all([import(r+`?mtime=${s}`),...a.map(y=>import(y+`?mtime=${s}`))]);E({module:w,bubbled:e,deps:k})}return!0}async function R(r){const e=l[r];if(!e||e.isDeclined)return!1;const t=e.disposeCallbacks;return e.disposeCallbacks=[],e.data={},t.map(o=>o()),!0}i.addEventListener("message",({data:r})=>{if(!r)return;const e=JSON.parse(r);if(e.type==="reload"){c("message: reload"),d();return}if(e.type==="error"){console.error(`[ESM-HMR] ${e.fileLoc?e.fileLoc+`
`:""}`,e.title+`
`+e.errorMessage),f(e);return}if(e.type==="update"){c("message: update",e),(e.url.endsWith(".css")?M(e):C(e)).then(t=>{t?m():d()}).catch(t=>{console.error("[ESM-HMR] Hot Update Error",t),t instanceof SyntaxError&&f({title:"Hot Update Error",fileLoc:e.url,errorMessage:t.message,errorStackTrace:t.stack})});return}c("message: unknown",e)}),c("listening for file changes..."),n&&window.addEventListener("error",function(r){if(window.snowpackHmrErrorOverlayIgnoreErrors){const o=window.snowpackHmrErrorOverlayIgnoreErrors;for(const s of o)if(r.message&&r.message.match(s)){console.warn("[ESM-HMR] Hmr Error Overlay Ignored",r.message);return}}let e;r.filename&&(e=r.filename,r.lineno!==void 0&&(e+=` [:${r.lineno}`,r.colno!==void 0&&(e+=`:${r.colno}`),e+="]"));let t=r.message;r.message==="Uncaught ReferenceError: process is not defined"&&(t+=`
(Tip: Node's "process" global does not exist in Snowpack. Use "import.meta.env" instead of "process.env").`),f({title:"Unhandled Runtime Error",fileLoc:e,errorMessage:t,errorStackTrace:r.error?r.error.stack:void 0})});
